version: "3.7"

services:

  mongodb:
    container_name: mongodb
    image: mongo:4.4.6
    restart: always
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  mongo-express:
    container_name: mongo-express
    image: mongo-express:0.54.0
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongodb
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  golang_application:
    container_name:  golang_container
    build:
      context: ./
      dockerfile: ./deployment/dockerfiles/golang.Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: on-failure
    depends_on:
      - mongodb
      - mongo-express
    volumes:
      - .:/app/
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce:2.16.0
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - app-network

volumes:
  mongodb-data:
    name: mongodb-data
  portainer-data:
    driver: local

networks:
  app-network:
    driver: bridge
